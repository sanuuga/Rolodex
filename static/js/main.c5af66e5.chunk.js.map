{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","name","email","CardList","monsters","map","id","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAKaA,EAAO,SAACC,GACjB,OACA,sBAAKC,UAAU,iBAAf,UACC,qBAAKC,IAAI,UAAUC,IAAI,mEACvB,mCAAMH,EAAMI,QAAQC,KAApB,OACA,kCAAKL,EAAMI,QAAQE,MAAnB,WCJQC,G,MAAW,SAACP,GAAD,OACpB,qBAAKC,UAAU,YAAf,SACCD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQM,WCLdC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACKZ,UAAU,SACVa,KAAK,SACLF,YAAcA,EACdG,SAAUF,MCiCJG,G,wDAjCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXT,SAAU,GACVU,YAAY,IALH,E,qDASb,WAAoB,IAAD,OACjBC,MAAM,6CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEhB,SAAUe,S,oBAI3C,WAAU,IAAD,SAC2BE,KAAKR,MAA/BT,EADD,EACCA,SAAUU,EADX,EACWA,YACZQ,EAAmBlB,EAASmB,QAAO,SAAAvB,GAAO,OAAIA,EAAQC,KAAKuB,cAAcC,SAASX,EAAYU,kBAEpG,OACE,sBAAK3B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE3D,cAAC,EAAD,CAAUxB,SAAUkB,W,GA5BVO,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c5af66e5.chunk.js","sourcesContent":["/* eslint-disable no-template-curly-in-string */\r\nimport React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n    <div className='card-container'>\r\n     <img alt=\"monster\" src=\"https://robohash.org/${props.monster.id}?set=set3&size=150x150\" />\r\n     <h2> {props.monster.name} </h2>\r\n     <p> {props.monster.email} </p>\r\n    </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component'; \r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => (\r\n    <div className='card-list'>\r\n    {props.monsters.map(monster => (\r\n        <Card key={monster.id} monster={monster}/>\r\n    ))}\r\n    </div>\r\n\r\n);\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n         className='search'\r\n         type='search' \r\n         placeholder={ placeholder } \r\n         onChange={handleChange} \r\n    />\r\n);","import React, { Component } from \"react\";\n\nimport { CardList } from './components/card-list/card-list.component';\n\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField:''\n    };\n  }\n  \n  componentDidMount(){\n    fetch('http://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users }))\n  }\n\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n      <div className=\"App\">\n        <h1> Monsters Rolodex </h1>\n        <SearchBox \n          placeholder='search monsters'\n          handleChange={e => this.setState({ searchField: e.target.value})}\n        />\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}